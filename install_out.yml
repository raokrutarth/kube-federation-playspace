
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  name: federatedclusterroles.types.kubefed.io
spec:
  group: types.kubefed.io
  names:
    kind: FederatedClusterRole
    plural: federatedclusterroles
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            overrides:
              items:
                properties:
                  clusterName:
                    type: string
                  clusterOverrides:
                    items:
                      properties:
                        op:
                          pattern: ^(add|remove|replace)?$
                          type: string
                        path:
                          type: string
                        value:
                          anyOf:
                          - type: string
                          - type: integer
                          - type: boolean
                          - type: object
                          - type: array
                      required:
                      - path
                      type: object
                    type: array
                type: object
              type: array
            placement:
              properties:
                clusterSelector:
                  properties:
                    matchExpressions:
                      items:
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                          values:
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                clusters:
                  items:
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              type: object
            template:
              type: object
          type: object
        status:
          properties:
            clusters:
              items:
                properties:
                  name:
                    type: string
                  status:
                    type: string
                required:
                - name
                type: object
              type: array
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  lastUpdateTime:
                    format: date-time
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            observedGeneration:
              format: int64
              type: integer
          type: object
      required:
      - spec
  version: v1beta1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  name: federatedconfigmaps.types.kubefed.io
spec:
  group: types.kubefed.io
  names:
    kind: FederatedConfigMap
    plural: federatedconfigmaps
    shortNames:
    - fcm
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            overrides:
              items:
                properties:
                  clusterName:
                    type: string
                  clusterOverrides:
                    items:
                      properties:
                        op:
                          pattern: ^(add|remove|replace)?$
                          type: string
                        path:
                          type: string
                        value:
                          anyOf:
                          - type: string
                          - type: integer
                          - type: boolean
                          - type: object
                          - type: array
                      required:
                      - path
                      type: object
                    type: array
                type: object
              type: array
            placement:
              properties:
                clusterSelector:
                  properties:
                    matchExpressions:
                      items:
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                          values:
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                clusters:
                  items:
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              type: object
            template:
              type: object
          type: object
        status:
          properties:
            clusters:
              items:
                properties:
                  name:
                    type: string
                  status:
                    type: string
                required:
                - name
                type: object
              type: array
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  lastUpdateTime:
                    format: date-time
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            observedGeneration:
              format: int64
              type: integer
          type: object
      required:
      - spec
  version: v1beta1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  name: federateddeployments.types.kubefed.io
spec:
  group: types.kubefed.io
  names:
    kind: FederatedDeployment
    plural: federateddeployments
    shortNames:
    - fdeploy
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            overrides:
              items:
                properties:
                  clusterName:
                    type: string
                  clusterOverrides:
                    items:
                      properties:
                        op:
                          pattern: ^(add|remove|replace)?$
                          type: string
                        path:
                          type: string
                        value:
                          anyOf:
                          - type: string
                          - type: integer
                          - type: boolean
                          - type: object
                          - type: array
                      required:
                      - path
                      type: object
                    type: array
                type: object
              type: array
            placement:
              properties:
                clusterSelector:
                  properties:
                    matchExpressions:
                      items:
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                          values:
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                clusters:
                  items:
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              type: object
            retainReplicas:
              type: boolean
            template:
              type: object
          type: object
        status:
          properties:
            clusters:
              items:
                properties:
                  name:
                    type: string
                  status:
                    type: string
                required:
                - name
                type: object
              type: array
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  lastUpdateTime:
                    format: date-time
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            observedGeneration:
              format: int64
              type: integer
          type: object
      required:
      - spec
  version: v1beta1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  name: federatedingresses.types.kubefed.io
spec:
  group: types.kubefed.io
  names:
    kind: FederatedIngress
    plural: federatedingresses
    shortNames:
    - fing
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            overrides:
              items:
                properties:
                  clusterName:
                    type: string
                  clusterOverrides:
                    items:
                      properties:
                        op:
                          pattern: ^(add|remove|replace)?$
                          type: string
                        path:
                          type: string
                        value:
                          anyOf:
                          - type: string
                          - type: integer
                          - type: boolean
                          - type: object
                          - type: array
                      required:
                      - path
                      type: object
                    type: array
                type: object
              type: array
            placement:
              properties:
                clusterSelector:
                  properties:
                    matchExpressions:
                      items:
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                          values:
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                clusters:
                  items:
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              type: object
            template:
              type: object
          type: object
        status:
          properties:
            clusters:
              items:
                properties:
                  name:
                    type: string
                  status:
                    type: string
                required:
                - name
                type: object
              type: array
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  lastUpdateTime:
                    format: date-time
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            observedGeneration:
              format: int64
              type: integer
          type: object
      required:
      - spec
  version: v1beta1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  name: federatedjobs.types.kubefed.io
spec:
  group: types.kubefed.io
  names:
    kind: FederatedJob
    plural: federatedjobs
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            overrides:
              items:
                properties:
                  clusterName:
                    type: string
                  clusterOverrides:
                    items:
                      properties:
                        op:
                          pattern: ^(add|remove|replace)?$
                          type: string
                        path:
                          type: string
                        value:
                          anyOf:
                          - type: string
                          - type: integer
                          - type: boolean
                          - type: object
                          - type: array
                      required:
                      - path
                      type: object
                    type: array
                type: object
              type: array
            placement:
              properties:
                clusterSelector:
                  properties:
                    matchExpressions:
                      items:
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                          values:
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                clusters:
                  items:
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              type: object
            template:
              type: object
          type: object
        status:
          properties:
            clusters:
              items:
                properties:
                  name:
                    type: string
                  status:
                    type: string
                required:
                - name
                type: object
              type: array
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  lastUpdateTime:
                    format: date-time
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            observedGeneration:
              format: int64
              type: integer
          type: object
      required:
      - spec
  version: v1beta1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  name: federatednamespaces.types.kubefed.io
spec:
  group: types.kubefed.io
  names:
    kind: FederatedNamespace
    plural: federatednamespaces
    shortNames:
    - fns
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            overrides:
              items:
                properties:
                  clusterName:
                    type: string
                  clusterOverrides:
                    items:
                      properties:
                        op:
                          pattern: ^(add|remove|replace)?$
                          type: string
                        path:
                          type: string
                        value:
                          anyOf:
                          - type: string
                          - type: integer
                          - type: boolean
                          - type: object
                          - type: array
                      required:
                      - path
                      type: object
                    type: array
                type: object
              type: array
            placement:
              properties:
                clusterSelector:
                  properties:
                    matchExpressions:
                      items:
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                          values:
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                clusters:
                  items:
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              type: object
            template:
              type: object
          type: object
        status:
          properties:
            clusters:
              items:
                properties:
                  name:
                    type: string
                  status:
                    type: string
                required:
                - name
                type: object
              type: array
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  lastUpdateTime:
                    format: date-time
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            observedGeneration:
              format: int64
              type: integer
          type: object
      required:
      - spec
  version: v1beta1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  name: federatedreplicasets.types.kubefed.io
spec:
  group: types.kubefed.io
  names:
    kind: FederatedReplicaSet
    plural: federatedreplicasets
    shortNames:
    - frs
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            overrides:
              items:
                properties:
                  clusterName:
                    type: string
                  clusterOverrides:
                    items:
                      properties:
                        op:
                          pattern: ^(add|remove|replace)?$
                          type: string
                        path:
                          type: string
                        value:
                          anyOf:
                          - type: string
                          - type: integer
                          - type: boolean
                          - type: object
                          - type: array
                      required:
                      - path
                      type: object
                    type: array
                type: object
              type: array
            placement:
              properties:
                clusterSelector:
                  properties:
                    matchExpressions:
                      items:
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                          values:
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                clusters:
                  items:
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              type: object
            retainReplicas:
              type: boolean
            template:
              type: object
          type: object
        status:
          properties:
            clusters:
              items:
                properties:
                  name:
                    type: string
                  status:
                    type: string
                required:
                - name
                type: object
              type: array
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  lastUpdateTime:
                    format: date-time
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            observedGeneration:
              format: int64
              type: integer
          type: object
      required:
      - spec
  version: v1beta1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  name: federatedsecrets.types.kubefed.io
spec:
  group: types.kubefed.io
  names:
    kind: FederatedSecret
    plural: federatedsecrets
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            overrides:
              items:
                properties:
                  clusterName:
                    type: string
                  clusterOverrides:
                    items:
                      properties:
                        op:
                          pattern: ^(add|remove|replace)?$
                          type: string
                        path:
                          type: string
                        value:
                          anyOf:
                          - type: string
                          - type: integer
                          - type: boolean
                          - type: object
                          - type: array
                      required:
                      - path
                      type: object
                    type: array
                type: object
              type: array
            placement:
              properties:
                clusterSelector:
                  properties:
                    matchExpressions:
                      items:
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                          values:
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                clusters:
                  items:
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              type: object
            template:
              type: object
          type: object
        status:
          properties:
            clusters:
              items:
                properties:
                  name:
                    type: string
                  status:
                    type: string
                required:
                - name
                type: object
              type: array
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  lastUpdateTime:
                    format: date-time
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            observedGeneration:
              format: int64
              type: integer
          type: object
      required:
      - spec
  version: v1beta1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  name: federatedserviceaccounts.types.kubefed.io
spec:
  group: types.kubefed.io
  names:
    kind: FederatedServiceAccount
    plural: federatedserviceaccounts
    shortNames:
    - fsa
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            overrides:
              items:
                properties:
                  clusterName:
                    type: string
                  clusterOverrides:
                    items:
                      properties:
                        op:
                          pattern: ^(add|remove|replace)?$
                          type: string
                        path:
                          type: string
                        value:
                          anyOf:
                          - type: string
                          - type: integer
                          - type: boolean
                          - type: object
                          - type: array
                      required:
                      - path
                      type: object
                    type: array
                type: object
              type: array
            placement:
              properties:
                clusterSelector:
                  properties:
                    matchExpressions:
                      items:
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                          values:
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                clusters:
                  items:
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              type: object
            template:
              type: object
          type: object
        status:
          properties:
            clusters:
              items:
                properties:
                  name:
                    type: string
                  status:
                    type: string
                required:
                - name
                type: object
              type: array
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  lastUpdateTime:
                    format: date-time
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            observedGeneration:
              format: int64
              type: integer
          type: object
      required:
      - spec
  version: v1beta1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  name: federatedservices.types.kubefed.io
spec:
  group: types.kubefed.io
  names:
    kind: FederatedService
    plural: federatedservices
    shortNames:
    - fsvc
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            overrides:
              items:
                properties:
                  clusterName:
                    type: string
                  clusterOverrides:
                    items:
                      properties:
                        op:
                          pattern: ^(add|remove|replace)?$
                          type: string
                        path:
                          type: string
                        value:
                          anyOf:
                          - type: string
                          - type: integer
                          - type: boolean
                          - type: object
                          - type: array
                      required:
                      - path
                      type: object
                    type: array
                type: object
              type: array
            placement:
              properties:
                clusterSelector:
                  properties:
                    matchExpressions:
                      items:
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                          values:
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                clusters:
                  items:
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              type: object
            template:
              type: object
          type: object
        status:
          properties:
            clusters:
              items:
                properties:
                  name:
                    type: string
                  status:
                    type: string
                required:
                - name
                type: object
              type: array
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  lastUpdateTime:
                    format: date-time
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            observedGeneration:
              format: int64
              type: integer
          type: object
      required:
      - spec
  version: v1beta1
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: clusterpropagatedversions.core.kubefed.io
spec:
  group: core.kubefed.io
  names:
    kind: ClusterPropagatedVersion
    listKind: ClusterPropagatedVersionList
    plural: clusterpropagatedversions
    singular: clusterpropagatedversion
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ClusterPropagatedVersion holds version information about the state
        propagated from KubeFed APIs (configured by FederatedTypeConfig resources)
        to member clusters. The name of a ClusterPropagatedVersion encodes the kind
        and name of the resource it stores information for (i.e. <lower-case kind>-<resource
        name>). If a target resource has a populated metadata.Generation field, the
        generation will be stored with a prefix of `gen:` as the version for the cluster.  If
        metadata.Generation is not available, metadata.ResourceVersion will be stored
        with a prefix of `rv:` as the version for the cluster.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        status:
          description: PropagatedVersionStatus defines the observed state of PropagatedVersion
          properties:
            clusterVersions:
              description: The last versions produced in each cluster for this resource.
              items:
                properties:
                  clusterName:
                    description: The name of the cluster the version is for.
                    type: string
                  version:
                    description: The last version produced for the resource by a KubeFed
                      operation.
                    type: string
                required:
                - clusterName
                - version
                type: object
              type: array
            overridesVersion:
              description: The observed version of the overrides for this resource.
              type: string
            templateVersion:
              description: The observed version of the template for this resource.
              type: string
          required:
          - overridesVersion
          - templateVersion
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: federatedservicestatuses.core.kubefed.io
spec:
  group: core.kubefed.io
  names:
    kind: FederatedServiceStatus
    listKind: FederatedServiceStatusList
    plural: federatedservicestatuses
    singular: federatedservicestatus
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        clusterStatus:
          items:
            description: FederatedServiceClusterStatus is the observed status of the
              resource for a named cluster
            properties:
              clusterName:
                type: string
              status:
                description: ServiceStatus represents the current status of a service.
                properties:
                  loadBalancer:
                    description: LoadBalancer contains the current status of the load-balancer,
                      if one is present.
                    properties:
                      ingress:
                        description: Ingress is a list containing ingress points for
                          the load-balancer. Traffic intended for the service should
                          be sent to these ingress points.
                        items:
                          description: 'LoadBalancerIngress represents the status
                            of a load-balancer ingress point: traffic intended for
                            the service should be sent to an ingress point.'
                          properties:
                            hostname:
                              description: Hostname is set for load-balancer ingress
                                points that are DNS based (typically AWS load-balancers)
                              type: string
                            ip:
                              description: IP is set for load-balancer ingress points
                                that are IP based (typically GCE or OpenStack load-balancers)
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
            required:
            - clusterName
            - status
            type: object
          type: array
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: federatedtypeconfigs.core.kubefed.io
spec:
  group: core.kubefed.io
  names:
    kind: FederatedTypeConfig
    listKind: FederatedTypeConfigList
    plural: federatedtypeconfigs
    shortNames:
    - ftc
    singular: federatedtypeconfig
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: "FederatedTypeConfig programs KubeFed to know about a single API
        type - the \"target type\" - that a user wants to federate. For each target
        type, there is a corresponding FederatedType that has the following fields:
        \n - The \"template\" field specifies the basic definition of a federated
        resource - The \"placement\" field specifies the placement information for
        the federated   resource - The \"overrides\" field specifies how the target
        resource should vary across   clusters."
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: FederatedTypeConfigSpec defines the desired state of FederatedTypeConfig.
          properties:
            federatedType:
              description: Configuration for the federated type that defines (via
                template, placement and overrides fields) how the target type should
                appear in multiple cluster.
              properties:
                group:
                  description: Group of the resource.
                  type: string
                kind:
                  description: Camel-cased singular name of the resource (e.g. ConfigMap)
                  type: string
                pluralName:
                  description: Lower-cased plural name of the resource (e.g. configmaps).  If
                    not provided, it will be computed by lower-casing the kind and
                    suffixing an 's'.
                  type: string
                scope:
                  description: Scope of the resource.
                  type: string
                version:
                  description: Version of the resource.
                  type: string
              required:
              - kind
              - pluralName
              - scope
              - version
              type: object
            propagation:
              description: Whether or not propagation to member clusters should be
                enabled.
              type: string
            statusCollection:
              description: Whether or not Status object should be populated.
              type: string
            statusType:
              description: Configuration for the status type that holds information
                about which type holds the status of the federated resource. If not
                provided, the group and version will default to those provided for
                the federated type api resource.
              properties:
                group:
                  description: Group of the resource.
                  type: string
                kind:
                  description: Camel-cased singular name of the resource (e.g. ConfigMap)
                  type: string
                pluralName:
                  description: Lower-cased plural name of the resource (e.g. configmaps).  If
                    not provided, it will be computed by lower-casing the kind and
                    suffixing an 's'.
                  type: string
                scope:
                  description: Scope of the resource.
                  type: string
                version:
                  description: Version of the resource.
                  type: string
              required:
              - kind
              - pluralName
              - scope
              - version
              type: object
            targetType:
              description: The configuration of the target type. If not set, the pluralName
                and groupName fields will be set from the metadata.name of this resource.
                The kind field must be set.
              properties:
                group:
                  description: Group of the resource.
                  type: string
                kind:
                  description: Camel-cased singular name of the resource (e.g. ConfigMap)
                  type: string
                pluralName:
                  description: Lower-cased plural name of the resource (e.g. configmaps).  If
                    not provided, it will be computed by lower-casing the kind and
                    suffixing an 's'.
                  type: string
                scope:
                  description: Scope of the resource.
                  type: string
                version:
                  description: Version of the resource.
                  type: string
              required:
              - kind
              - pluralName
              - scope
              - version
              type: object
          required:
          - federatedType
          - propagation
          - targetType
          type: object
        status:
          description: FederatedTypeConfigStatus defines the observed state of FederatedTypeConfig
          properties:
            observedGeneration:
              description: ObservedGeneration is the generation as observed by the
                controller consuming the FederatedTypeConfig.
              format: int64
              type: integer
            propagationController:
              description: PropagationController tracks the status of the sync controller.
              type: string
            statusController:
              description: StatusController tracks the status of the status controller.
              type: string
          required:
          - observedGeneration
          - propagationController
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: kubefedclusters.core.kubefed.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    name: age
    type: date
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: ready
    type: string
  group: core.kubefed.io
  names:
    kind: KubeFedCluster
    listKind: KubeFedClusterList
    plural: kubefedclusters
    singular: kubefedcluster
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: KubeFedCluster configures KubeFed to be aware of a Kubernetes cluster
        and encapsulates the details necessary to communicate with the cluster.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KubeFedClusterSpec defines the desired state of KubeFedCluster
          properties:
            apiEndpoint:
              description: The API endpoint of the member cluster. This can be a hostname,
                hostname:port, IP or IP:port.
              type: string
            caBundle:
              description: CABundle contains the certificate authority information.
              format: byte
              type: string
            disabledTLSValidations:
              description: DisabledTLSValidations defines a list of checks to ignore
                when validating the TLS connection to the member cluster.  This can
                be any of *, SubjectName, or ValidityPeriod. If * is specified, it
                is expected to be the only option in list.
              items:
                type: string
              type: array
            secretRef:
              description: Name of the secret containing the token required to access
                the member cluster. The secret needs to exist in the same namespace
                as the control plane and should have a "token" key.
              properties:
                name:
                  description: Name of a secret within the enclosing namespace
                  type: string
              required:
              - name
              type: object
          required:
          - apiEndpoint
          - secretRef
          type: object
        status:
          description: KubeFedClusterStatus contains information about the current
            status of a cluster updated periodically by cluster controller.
          properties:
            conditions:
              description: Conditions is an array of current cluster conditions.
              items:
                description: ClusterCondition describes current state of a cluster.
                properties:
                  lastProbeTime:
                    description: Last time the condition was checked.
                    format: date-time
                    type: string
                  lastTransitionTime:
                    description: Last time the condition transit from one status to
                      another.
                    format: date-time
                    type: string
                  message:
                    description: Human readable message indicating details about last
                      transition.
                    type: string
                  reason:
                    description: (brief) reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of cluster condition, Ready or Offline.
                    type: string
                required:
                - lastProbeTime
                - status
                - type
                type: object
              type: array
            region:
              description: Region is the name of the region in which all of the nodes
                in the cluster exist.  e.g. 'us-east1'.
              type: string
            zones:
              description: Zones are the names of availability zones in which the
                nodes of the cluster exist, e.g. 'us-east1-a'.
              items:
                type: string
              type: array
          required:
          - conditions
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: kubefedconfigs.core.kubefed.io
spec:
  group: core.kubefed.io
  names:
    kind: KubeFedConfig
    listKind: KubeFedConfigList
    plural: kubefedconfigs
    singular: kubefedconfig
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KubeFedConfigSpec defines the desired state of KubeFedConfig
          properties:
            clusterHealthCheck:
              properties:
                failureThreshold:
                  description: Minimum consecutive failures for the cluster health
                    to be considered failed after having succeeded.
                  format: int64
                  type: integer
                period:
                  description: How often to monitor the cluster health.
                  type: string
                successThreshold:
                  description: Minimum consecutive successes for the cluster health
                    to be considered successful after having failed.
                  format: int64
                  type: integer
                timeout:
                  description: Duration after which the cluster health check times
                    out.
                  type: string
              type: object
            controllerDuration:
              properties:
                availableDelay:
                  description: Time to wait before reconciling on a healthy cluster.
                  type: string
                unavailableDelay:
                  description: Time to wait before giving up on an unhealthy cluster.
                  type: string
              type: object
            featureGates:
              items:
                properties:
                  configuration:
                    type: string
                  name:
                    type: string
                required:
                - configuration
                - name
                type: object
              type: array
            leaderElect:
              properties:
                leaseDuration:
                  description: The duration that non-leader candidates will wait after
                    observing a leadership renewal until attempting to acquire leadership
                    of a led but unrenewed leader slot. This is effectively the maximum
                    duration that a leader can be stopped before it is replaced by
                    another candidate. This is only applicable if leader election
                    is enabled.
                  type: string
                renewDeadline:
                  description: The interval between attempts by the acting master
                    to renew a leadership slot before it stops leading. This must
                    be less than or equal to the lease duration. This is only applicable
                    if leader election is enabled.
                  type: string
                resourceLock:
                  description: The type of resource object that is used for locking
                    during leader election. Supported options are `configmaps` (default)
                    and `endpoints`.
                  type: string
                retryPeriod:
                  description: The duration the clients should wait between attempting
                    acquisition and renewal of a leadership. This is only applicable
                    if leader election is enabled.
                  type: string
              type: object
            scope:
              description: The scope of the KubeFed control plane should be either
                `Namespaced` or `Cluster`. `Namespaced` indicates that the KubeFed
                namespace will be the only target of the control plane.
              type: string
            syncController:
              properties:
                adoptResources:
                  description: Whether to adopt pre-existing resources in member clusters.
                    Defaults to "Enabled".
                  type: string
              type: object
          required:
          - scope
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: propagatedversions.core.kubefed.io
spec:
  group: core.kubefed.io
  names:
    kind: PropagatedVersion
    listKind: PropagatedVersionList
    plural: propagatedversions
    singular: propagatedversion
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: PropagatedVersion holds version information about the state propagated
        from KubeFed APIs (configured by FederatedTypeConfig resources) to member
        clusters. The name of a PropagatedVersion encodes the kind and name of the
        resource it stores information for (i.e. <lower-case kind>-<resource name>).
        If a target resource has a populated metadata.Generation field, the generation
        will be stored with a prefix of `gen:` as the version for the cluster.  If
        metadata.Generation is not available, metadata.ResourceVersion will be stored
        with a prefix of `rv:` as the version for the cluster.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        status:
          description: PropagatedVersionStatus defines the observed state of PropagatedVersion
          properties:
            clusterVersions:
              description: The last versions produced in each cluster for this resource.
              items:
                properties:
                  clusterName:
                    description: The name of the cluster the version is for.
                    type: string
                  version:
                    description: The last version produced for the resource by a KubeFed
                      operation.
                    type: string
                required:
                - clusterName
                - version
                type: object
              type: array
            overridesVersion:
              description: The observed version of the overrides for this resource.
              type: string
            templateVersion:
              description: The observed version of the template for this resource.
              type: string
          required:
          - overridesVersion
          - templateVersion
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: dnsendpoints.multiclusterdns.kubefed.io
spec:
  group: multiclusterdns.kubefed.io
  names:
    kind: DNSEndpoint
    listKind: DNSEndpointList
    plural: dnsendpoints
    singular: dnsendpoint
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: DNSEndpoint is the CRD wrapper for Endpoint which is designed to
        act as a source of truth for external-dns.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: DNSEndpointSpec defines the desired state of DNSEndpoint
          properties:
            endpoints:
              items:
                description: Endpoint is a high-level association between a service
                  and an IP.
                properties:
                  dnsName:
                    description: The FQDN of the DNS record.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels stores labels defined for the Endpoint.
                    type: object
                  recordTTL:
                    description: TTL for the record in seconds.
                    format: int64
                    type: integer
                  recordType:
                    description: RecordType type of record, e.g. CNAME, A, SRV, TXT
                      etc.
                    type: string
                  targets:
                    description: The targets that the DNS record points to.
                    items:
                      type: string
                    type: array
                type: object
              type: array
          type: object
        status:
          description: DNSEndpointStatus defines the observed state of DNSEndpoint
          properties:
            observedGeneration:
              description: ObservedGeneration is the generation as observed by the
                controller consuming the DNSEndpoint.
              format: int64
              type: integer
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: domains.multiclusterdns.kubefed.io
spec:
  group: multiclusterdns.kubefed.io
  names:
    kind: Domain
    listKind: DomainList
    plural: domains
    singular: domain
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        domain:
          description: Domain is the DNS zone associated with the KubeFed control
            plane
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        nameServer:
          description: NameServer is the authoritative DNS name server for the KubeFed
            domain
          type: string
      required:
      - domain
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: ingressdnsrecords.multiclusterdns.kubefed.io
spec:
  group: multiclusterdns.kubefed.io
  names:
    kind: IngressDNSRecord
    listKind: IngressDNSRecordList
    plural: ingressdnsrecords
    singular: ingressdnsrecord
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: IngressDNSRecordSpec defines the desired state of IngressDNSRecord
          properties:
            hosts:
              description: Host from the IngressRule in Cluster Ingress Spec
              items:
                type: string
              type: array
            recordTTL:
              description: RecordTTL is the TTL in seconds for DNS records created
                for the Ingress, if omitted a default would be used
              format: int64
              type: integer
          type: object
        status:
          description: IngressDNSRecordStatus defines the observed state of IngressDNSRecord
          properties:
            dns:
              description: Array of Ingress Controller LoadBalancers
              items:
                description: ClusterIngressDNS defines the observed status of Ingress
                  within a cluster.
                properties:
                  cluster:
                    description: Cluster name
                    type: string
                  loadBalancer:
                    description: LoadBalancer for the corresponding ingress controller
                    properties:
                      ingress:
                        description: Ingress is a list containing ingress points for
                          the load-balancer. Traffic intended for the service should
                          be sent to these ingress points.
                        items:
                          description: 'LoadBalancerIngress represents the status
                            of a load-balancer ingress point: traffic intended for
                            the service should be sent to an ingress point.'
                          properties:
                            hostname:
                              description: Hostname is set for load-balancer ingress
                                points that are DNS based (typically AWS load-balancers)
                              type: string
                            ip:
                              description: IP is set for load-balancer ingress points
                                that are IP based (typically GCE or OpenStack load-balancers)
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: servicednsrecords.multiclusterdns.kubefed.io
spec:
  group: multiclusterdns.kubefed.io
  names:
    kind: ServiceDNSRecord
    listKind: ServiceDNSRecordList
    plural: servicednsrecords
    singular: servicednsrecord
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: "ServiceDNSRecord defines a scheme of DNS name and subdomains that
        should be programmed with endpoint information about a Service deployed in
        multiple Kubernetes clusters. ServiceDNSRecord is name-associated with the
        Services it programs endpoint information for, meaning that a ServiceDNSRecord
        expresses the intent to program DNS with information about endpoints for the
        Kubernetes Service resources with the same name and namespace in different
        clusters. \n For the example, given the following values: \n metadata.name:
        test-service metadata.namespace: test-namespace spec.federationName: test-federation
        \n the following set of DNS names will be programmed: \n Global Level: test-service.test-namespace.test-federation.svc.<federation-domain>
        Region Level: test-service.test-namespace.test-federation.svc.(status.DNS[*].region).<federation-domain>
        Zone Level  : test-service.test-namespace.test-federation.svc.(status.DNS[*].zone).(status.DNS[*].region).<federation-domain>
        \n Optionally, when DNSPrefix is specified, another DNS name will be programmed
        which would be a CNAME record pointing to DNS name at global level as below:
        <dns-prefix>.<federation-domain> --> test-service.test-namespace.test-federation.svc.<federation-domain>"
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ServiceDNSRecordSpec defines the desired state of ServiceDNSRecord.
          properties:
            allowServiceWithoutEndpoints:
              description: AllowServiceWithoutEndpoints allows DNS records to be written
                for Service shards without endpoints
              type: boolean
            dnsPrefix:
              description: DNSPrefix when specified, an additional DNS record would
                be created with <DNSPrefix>.<KubeFedDomain>
              type: string
            domainRef:
              description: DomainRef is the name of the domain object to which the
                corresponding federated service belongs
              type: string
            externalName:
              description: ExternalName when specified, replaces the service name
                portion of a resource record with the value of ExternalName.
              type: string
            recordTTL:
              description: RecordTTL is the TTL in seconds for DNS records created
                for this Service, if omitted a default would be used
              format: int64
              type: integer
          required:
          - domainRef
          type: object
        status:
          description: ServiceDNSRecordStatus defines the observed state of ServiceDNSRecord.
          properties:
            dns:
              items:
                description: ClusterDNS defines the observed status of LoadBalancer
                  within a cluster.
                properties:
                  cluster:
                    description: Cluster name
                    type: string
                  loadBalancer:
                    description: LoadBalancer for the corresponding service
                    properties:
                      ingress:
                        description: Ingress is a list containing ingress points for
                          the load-balancer. Traffic intended for the service should
                          be sent to these ingress points.
                        items:
                          description: 'LoadBalancerIngress represents the status
                            of a load-balancer ingress point: traffic intended for
                            the service should be sent to an ingress point.'
                          properties:
                            hostname:
                              description: Hostname is set for load-balancer ingress
                                points that are DNS based (typically AWS load-balancers)
                              type: string
                            ip:
                              description: IP is set for load-balancer ingress points
                                that are IP based (typically GCE or OpenStack load-balancers)
                              type: string
                          type: object
                        type: array
                    type: object
                  region:
                    description: Region to which the cluster belongs
                    type: string
                  zones:
                    description: Zones to which the cluster belongs
                    items:
                      type: string
                    type: array
                type: object
              type: array
            domain:
              description: Domain is the DNS domain of the KubeFed control plane as
                in Domain API
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: replicaschedulingpreferences.scheduling.kubefed.io
spec:
  group: scheduling.kubefed.io
  names:
    kind: ReplicaSchedulingPreference
    listKind: ReplicaSchedulingPreferenceList
    plural: replicaschedulingpreferences
    singular: replicaschedulingpreference
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ReplicaSchedulingPreferenceSpec defines the desired state of
            ReplicaSchedulingPreference
          properties:
            clusters:
              additionalProperties:
                description: Preferences regarding number of replicas assigned to
                  a cluster workload object (dep, rs, ..) within a federated workload
                  object.
                properties:
                  maxReplicas:
                    description: Maximum number of replicas that should be assigned
                      to this cluster workload object. Unbounded if no value provided
                      (default).
                    format: int64
                    type: integer
                  minReplicas:
                    description: Minimum number of replicas that should be assigned
                      to this cluster workload object. 0 by default.
                    format: int64
                    type: integer
                  weight:
                    description: A number expressing the preference to put an additional
                      replica to this cluster workload object. 0 by default.
                    format: int64
                    type: integer
                type: object
              description: A mapping between cluster names and preferences regarding
                a local workload object (dep, rs, .. ) in these clusters. "*" (if
                provided) applies to all clusters if an explicit mapping is not provided.
                If omitted, clusters without explicit preferences should not have
                any replicas scheduled.
              type: object
            rebalance:
              description: If set to true then already scheduled and running replicas
                may be moved to other clusters in order to match current state to
                the specified preferences. Otherwise, if set to false, up and running
                replicas will not be moved.
              type: boolean
            targetKind:
              description: TODO (@irfanurrehman); upgrade this to label selector only
                if need be. The idea of this API is to have a a set of preferences
                which can be used for a target FederatedDeployment or FederatedReplicaset.
                Although the set of preferences in question can be applied to multiple
                target objects using label selectors, but there are no clear advantages
                of doing that as of now. To keep the implementation and usage simple,
                matching ns/name of RSP resource to the target resource is sufficient
                and only additional information needed in RSP resource is a target
                kind (FederatedDeployment or FederatedReplicaset).
              type: string
            totalReplicas:
              description: Total number of pods desired across federated clusters.
                Replicas specified in the spec for target deployment template or replicaset
                template will be discarded/overridden when scheduling preferences
                are specified.
              format: int32
              type: integer
          required:
          - targetKind
          - totalReplicas
          type: object
        status:
          description: ReplicaSchedulingPreferenceStatus defines the observed state
            of ReplicaSchedulingPreference
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []



---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: clusterpropagatedversions.core.kubefed.io
spec:
  group: core.kubefed.io
  names:
    kind: ClusterPropagatedVersion
    listKind: ClusterPropagatedVersionList
    plural: clusterpropagatedversions
    singular: clusterpropagatedversion
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ClusterPropagatedVersion holds version information about the state
        propagated from KubeFed APIs (configured by FederatedTypeConfig resources)
        to member clusters. The name of a ClusterPropagatedVersion encodes the kind
        and name of the resource it stores information for (i.e. <lower-case kind>-<resource
        name>). If a target resource has a populated metadata.Generation field, the
        generation will be stored with a prefix of `gen:` as the version for the cluster.  If
        metadata.Generation is not available, metadata.ResourceVersion will be stored
        with a prefix of `rv:` as the version for the cluster.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        status:
          description: PropagatedVersionStatus defines the observed state of PropagatedVersion
          properties:
            clusterVersions:
              description: The last versions produced in each cluster for this resource.
              items:
                properties:
                  clusterName:
                    description: The name of the cluster the version is for.
                    type: string
                  version:
                    description: The last version produced for the resource by a KubeFed
                      operation.
                    type: string
                required:
                - clusterName
                - version
                type: object
              type: array
            overridesVersion:
              description: The observed version of the overrides for this resource.
              type: string
            templateVersion:
              description: The observed version of the template for this resource.
              type: string
          required:
          - overridesVersion
          - templateVersion
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: federatedservicestatuses.core.kubefed.io
spec:
  group: core.kubefed.io
  names:
    kind: FederatedServiceStatus
    listKind: FederatedServiceStatusList
    plural: federatedservicestatuses
    singular: federatedservicestatus
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        clusterStatus:
          items:
            description: FederatedServiceClusterStatus is the observed status of the
              resource for a named cluster
            properties:
              clusterName:
                type: string
              status:
                description: ServiceStatus represents the current status of a service.
                properties:
                  loadBalancer:
                    description: LoadBalancer contains the current status of the load-balancer,
                      if one is present.
                    properties:
                      ingress:
                        description: Ingress is a list containing ingress points for
                          the load-balancer. Traffic intended for the service should
                          be sent to these ingress points.
                        items:
                          description: 'LoadBalancerIngress represents the status
                            of a load-balancer ingress point: traffic intended for
                            the service should be sent to an ingress point.'
                          properties:
                            hostname:
                              description: Hostname is set for load-balancer ingress
                                points that are DNS based (typically AWS load-balancers)
                              type: string
                            ip:
                              description: IP is set for load-balancer ingress points
                                that are IP based (typically GCE or OpenStack load-balancers)
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
            required:
            - clusterName
            - status
            type: object
          type: array
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: federatedtypeconfigs.core.kubefed.io
spec:
  group: core.kubefed.io
  names:
    kind: FederatedTypeConfig
    listKind: FederatedTypeConfigList
    plural: federatedtypeconfigs
    shortNames:
    - ftc
    singular: federatedtypeconfig
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: "FederatedTypeConfig programs KubeFed to know about a single API
        type - the \"target type\" - that a user wants to federate. For each target
        type, there is a corresponding FederatedType that has the following fields:
        \n - The \"template\" field specifies the basic definition of a federated
        resource - The \"placement\" field specifies the placement information for
        the federated   resource - The \"overrides\" field specifies how the target
        resource should vary across   clusters."
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: FederatedTypeConfigSpec defines the desired state of FederatedTypeConfig.
          properties:
            federatedType:
              description: Configuration for the federated type that defines (via
                template, placement and overrides fields) how the target type should
                appear in multiple cluster.
              properties:
                group:
                  description: Group of the resource.
                  type: string
                kind:
                  description: Camel-cased singular name of the resource (e.g. ConfigMap)
                  type: string
                pluralName:
                  description: Lower-cased plural name of the resource (e.g. configmaps).  If
                    not provided, it will be computed by lower-casing the kind and
                    suffixing an 's'.
                  type: string
                scope:
                  description: Scope of the resource.
                  type: string
                version:
                  description: Version of the resource.
                  type: string
              required:
              - kind
              - pluralName
              - scope
              - version
              type: object
            propagation:
              description: Whether or not propagation to member clusters should be
                enabled.
              type: string
            statusCollection:
              description: Whether or not Status object should be populated.
              type: string
            statusType:
              description: Configuration for the status type that holds information
                about which type holds the status of the federated resource. If not
                provided, the group and version will default to those provided for
                the federated type api resource.
              properties:
                group:
                  description: Group of the resource.
                  type: string
                kind:
                  description: Camel-cased singular name of the resource (e.g. ConfigMap)
                  type: string
                pluralName:
                  description: Lower-cased plural name of the resource (e.g. configmaps).  If
                    not provided, it will be computed by lower-casing the kind and
                    suffixing an 's'.
                  type: string
                scope:
                  description: Scope of the resource.
                  type: string
                version:
                  description: Version of the resource.
                  type: string
              required:
              - kind
              - pluralName
              - scope
              - version
              type: object
            targetType:
              description: The configuration of the target type. If not set, the pluralName
                and groupName fields will be set from the metadata.name of this resource.
                The kind field must be set.
              properties:
                group:
                  description: Group of the resource.
                  type: string
                kind:
                  description: Camel-cased singular name of the resource (e.g. ConfigMap)
                  type: string
                pluralName:
                  description: Lower-cased plural name of the resource (e.g. configmaps).  If
                    not provided, it will be computed by lower-casing the kind and
                    suffixing an 's'.
                  type: string
                scope:
                  description: Scope of the resource.
                  type: string
                version:
                  description: Version of the resource.
                  type: string
              required:
              - kind
              - pluralName
              - scope
              - version
              type: object
          required:
          - federatedType
          - propagation
          - targetType
          type: object
        status:
          description: FederatedTypeConfigStatus defines the observed state of FederatedTypeConfig
          properties:
            observedGeneration:
              description: ObservedGeneration is the generation as observed by the
                controller consuming the FederatedTypeConfig.
              format: int64
              type: integer
            propagationController:
              description: PropagationController tracks the status of the sync controller.
              type: string
            statusController:
              description: StatusController tracks the status of the status controller.
              type: string
          required:
          - observedGeneration
          - propagationController
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: kubefedclusters.core.kubefed.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    name: age
    type: date
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: ready
    type: string
  group: core.kubefed.io
  names:
    kind: KubeFedCluster
    listKind: KubeFedClusterList
    plural: kubefedclusters
    singular: kubefedcluster
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: KubeFedCluster configures KubeFed to be aware of a Kubernetes cluster
        and encapsulates the details necessary to communicate with the cluster.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KubeFedClusterSpec defines the desired state of KubeFedCluster
          properties:
            apiEndpoint:
              description: The API endpoint of the member cluster. This can be a hostname,
                hostname:port, IP or IP:port.
              type: string
            caBundle:
              description: CABundle contains the certificate authority information.
              format: byte
              type: string
            disabledTLSValidations:
              description: DisabledTLSValidations defines a list of checks to ignore
                when validating the TLS connection to the member cluster.  This can
                be any of *, SubjectName, or ValidityPeriod. If * is specified, it
                is expected to be the only option in list.
              items:
                type: string
              type: array
            secretRef:
              description: Name of the secret containing the token required to access
                the member cluster. The secret needs to exist in the same namespace
                as the control plane and should have a "token" key.
              properties:
                name:
                  description: Name of a secret within the enclosing namespace
                  type: string
              required:
              - name
              type: object
          required:
          - apiEndpoint
          - secretRef
          type: object
        status:
          description: KubeFedClusterStatus contains information about the current
            status of a cluster updated periodically by cluster controller.
          properties:
            conditions:
              description: Conditions is an array of current cluster conditions.
              items:
                description: ClusterCondition describes current state of a cluster.
                properties:
                  lastProbeTime:
                    description: Last time the condition was checked.
                    format: date-time
                    type: string
                  lastTransitionTime:
                    description: Last time the condition transit from one status to
                      another.
                    format: date-time
                    type: string
                  message:
                    description: Human readable message indicating details about last
                      transition.
                    type: string
                  reason:
                    description: (brief) reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of cluster condition, Ready or Offline.
                    type: string
                required:
                - lastProbeTime
                - status
                - type
                type: object
              type: array
            region:
              description: Region is the name of the region in which all of the nodes
                in the cluster exist.  e.g. 'us-east1'.
              type: string
            zones:
              description: Zones are the names of availability zones in which the
                nodes of the cluster exist, e.g. 'us-east1-a'.
              items:
                type: string
              type: array
          required:
          - conditions
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: kubefedconfigs.core.kubefed.io
spec:
  group: core.kubefed.io
  names:
    kind: KubeFedConfig
    listKind: KubeFedConfigList
    plural: kubefedconfigs
    singular: kubefedconfig
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KubeFedConfigSpec defines the desired state of KubeFedConfig
          properties:
            clusterHealthCheck:
              properties:
                failureThreshold:
                  description: Minimum consecutive failures for the cluster health
                    to be considered failed after having succeeded.
                  format: int64
                  type: integer
                period:
                  description: How often to monitor the cluster health.
                  type: string
                successThreshold:
                  description: Minimum consecutive successes for the cluster health
                    to be considered successful after having failed.
                  format: int64
                  type: integer
                timeout:
                  description: Duration after which the cluster health check times
                    out.
                  type: string
              type: object
            controllerDuration:
              properties:
                availableDelay:
                  description: Time to wait before reconciling on a healthy cluster.
                  type: string
                unavailableDelay:
                  description: Time to wait before giving up on an unhealthy cluster.
                  type: string
              type: object
            featureGates:
              items:
                properties:
                  configuration:
                    type: string
                  name:
                    type: string
                required:
                - configuration
                - name
                type: object
              type: array
            leaderElect:
              properties:
                leaseDuration:
                  description: The duration that non-leader candidates will wait after
                    observing a leadership renewal until attempting to acquire leadership
                    of a led but unrenewed leader slot. This is effectively the maximum
                    duration that a leader can be stopped before it is replaced by
                    another candidate. This is only applicable if leader election
                    is enabled.
                  type: string
                renewDeadline:
                  description: The interval between attempts by the acting master
                    to renew a leadership slot before it stops leading. This must
                    be less than or equal to the lease duration. This is only applicable
                    if leader election is enabled.
                  type: string
                resourceLock:
                  description: The type of resource object that is used for locking
                    during leader election. Supported options are `configmaps` (default)
                    and `endpoints`.
                  type: string
                retryPeriod:
                  description: The duration the clients should wait between attempting
                    acquisition and renewal of a leadership. This is only applicable
                    if leader election is enabled.
                  type: string
              type: object
            scope:
              description: The scope of the KubeFed control plane should be either
                `Namespaced` or `Cluster`. `Namespaced` indicates that the KubeFed
                namespace will be the only target of the control plane.
              type: string
            syncController:
              properties:
                adoptResources:
                  description: Whether to adopt pre-existing resources in member clusters.
                    Defaults to "Enabled".
                  type: string
              type: object
          required:
          - scope
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: propagatedversions.core.kubefed.io
spec:
  group: core.kubefed.io
  names:
    kind: PropagatedVersion
    listKind: PropagatedVersionList
    plural: propagatedversions
    singular: propagatedversion
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: PropagatedVersion holds version information about the state propagated
        from KubeFed APIs (configured by FederatedTypeConfig resources) to member
        clusters. The name of a PropagatedVersion encodes the kind and name of the
        resource it stores information for (i.e. <lower-case kind>-<resource name>).
        If a target resource has a populated metadata.Generation field, the generation
        will be stored with a prefix of `gen:` as the version for the cluster.  If
        metadata.Generation is not available, metadata.ResourceVersion will be stored
        with a prefix of `rv:` as the version for the cluster.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        status:
          description: PropagatedVersionStatus defines the observed state of PropagatedVersion
          properties:
            clusterVersions:
              description: The last versions produced in each cluster for this resource.
              items:
                properties:
                  clusterName:
                    description: The name of the cluster the version is for.
                    type: string
                  version:
                    description: The last version produced for the resource by a KubeFed
                      operation.
                    type: string
                required:
                - clusterName
                - version
                type: object
              type: array
            overridesVersion:
              description: The observed version of the overrides for this resource.
              type: string
            templateVersion:
              description: The observed version of the template for this resource.
              type: string
          required:
          - overridesVersion
          - templateVersion
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: dnsendpoints.multiclusterdns.kubefed.io
spec:
  group: multiclusterdns.kubefed.io
  names:
    kind: DNSEndpoint
    listKind: DNSEndpointList
    plural: dnsendpoints
    singular: dnsendpoint
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: DNSEndpoint is the CRD wrapper for Endpoint which is designed to
        act as a source of truth for external-dns.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: DNSEndpointSpec defines the desired state of DNSEndpoint
          properties:
            endpoints:
              items:
                description: Endpoint is a high-level association between a service
                  and an IP.
                properties:
                  dnsName:
                    description: The FQDN of the DNS record.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels stores labels defined for the Endpoint.
                    type: object
                  recordTTL:
                    description: TTL for the record in seconds.
                    format: int64
                    type: integer
                  recordType:
                    description: RecordType type of record, e.g. CNAME, A, SRV, TXT
                      etc.
                    type: string
                  targets:
                    description: The targets that the DNS record points to.
                    items:
                      type: string
                    type: array
                type: object
              type: array
          type: object
        status:
          description: DNSEndpointStatus defines the observed state of DNSEndpoint
          properties:
            observedGeneration:
              description: ObservedGeneration is the generation as observed by the
                controller consuming the DNSEndpoint.
              format: int64
              type: integer
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: domains.multiclusterdns.kubefed.io
spec:
  group: multiclusterdns.kubefed.io
  names:
    kind: Domain
    listKind: DomainList
    plural: domains
    singular: domain
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        domain:
          description: Domain is the DNS zone associated with the KubeFed control
            plane
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        nameServer:
          description: NameServer is the authoritative DNS name server for the KubeFed
            domain
          type: string
      required:
      - domain
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: ingressdnsrecords.multiclusterdns.kubefed.io
spec:
  group: multiclusterdns.kubefed.io
  names:
    kind: IngressDNSRecord
    listKind: IngressDNSRecordList
    plural: ingressdnsrecords
    singular: ingressdnsrecord
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: IngressDNSRecordSpec defines the desired state of IngressDNSRecord
          properties:
            hosts:
              description: Host from the IngressRule in Cluster Ingress Spec
              items:
                type: string
              type: array
            recordTTL:
              description: RecordTTL is the TTL in seconds for DNS records created
                for the Ingress, if omitted a default would be used
              format: int64
              type: integer
          type: object
        status:
          description: IngressDNSRecordStatus defines the observed state of IngressDNSRecord
          properties:
            dns:
              description: Array of Ingress Controller LoadBalancers
              items:
                description: ClusterIngressDNS defines the observed status of Ingress
                  within a cluster.
                properties:
                  cluster:
                    description: Cluster name
                    type: string
                  loadBalancer:
                    description: LoadBalancer for the corresponding ingress controller
                    properties:
                      ingress:
                        description: Ingress is a list containing ingress points for
                          the load-balancer. Traffic intended for the service should
                          be sent to these ingress points.
                        items:
                          description: 'LoadBalancerIngress represents the status
                            of a load-balancer ingress point: traffic intended for
                            the service should be sent to an ingress point.'
                          properties:
                            hostname:
                              description: Hostname is set for load-balancer ingress
                                points that are DNS based (typically AWS load-balancers)
                              type: string
                            ip:
                              description: IP is set for load-balancer ingress points
                                that are IP based (typically GCE or OpenStack load-balancers)
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: servicednsrecords.multiclusterdns.kubefed.io
spec:
  group: multiclusterdns.kubefed.io
  names:
    kind: ServiceDNSRecord
    listKind: ServiceDNSRecordList
    plural: servicednsrecords
    singular: servicednsrecord
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: "ServiceDNSRecord defines a scheme of DNS name and subdomains that
        should be programmed with endpoint information about a Service deployed in
        multiple Kubernetes clusters. ServiceDNSRecord is name-associated with the
        Services it programs endpoint information for, meaning that a ServiceDNSRecord
        expresses the intent to program DNS with information about endpoints for the
        Kubernetes Service resources with the same name and namespace in different
        clusters. \n For the example, given the following values: \n metadata.name:
        test-service metadata.namespace: test-namespace spec.federationName: test-federation
        \n the following set of DNS names will be programmed: \n Global Level: test-service.test-namespace.test-federation.svc.<federation-domain>
        Region Level: test-service.test-namespace.test-federation.svc.(status.DNS[*].region).<federation-domain>
        Zone Level  : test-service.test-namespace.test-federation.svc.(status.DNS[*].zone).(status.DNS[*].region).<federation-domain>
        \n Optionally, when DNSPrefix is specified, another DNS name will be programmed
        which would be a CNAME record pointing to DNS name at global level as below:
        <dns-prefix>.<federation-domain> --> test-service.test-namespace.test-federation.svc.<federation-domain>"
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ServiceDNSRecordSpec defines the desired state of ServiceDNSRecord.
          properties:
            allowServiceWithoutEndpoints:
              description: AllowServiceWithoutEndpoints allows DNS records to be written
                for Service shards without endpoints
              type: boolean
            dnsPrefix:
              description: DNSPrefix when specified, an additional DNS record would
                be created with <DNSPrefix>.<KubeFedDomain>
              type: string
            domainRef:
              description: DomainRef is the name of the domain object to which the
                corresponding federated service belongs
              type: string
            externalName:
              description: ExternalName when specified, replaces the service name
                portion of a resource record with the value of ExternalName.
              type: string
            recordTTL:
              description: RecordTTL is the TTL in seconds for DNS records created
                for this Service, if omitted a default would be used
              format: int64
              type: integer
          required:
          - domainRef
          type: object
        status:
          description: ServiceDNSRecordStatus defines the observed state of ServiceDNSRecord.
          properties:
            dns:
              items:
                description: ClusterDNS defines the observed status of LoadBalancer
                  within a cluster.
                properties:
                  cluster:
                    description: Cluster name
                    type: string
                  loadBalancer:
                    description: LoadBalancer for the corresponding service
                    properties:
                      ingress:
                        description: Ingress is a list containing ingress points for
                          the load-balancer. Traffic intended for the service should
                          be sent to these ingress points.
                        items:
                          description: 'LoadBalancerIngress represents the status
                            of a load-balancer ingress point: traffic intended for
                            the service should be sent to an ingress point.'
                          properties:
                            hostname:
                              description: Hostname is set for load-balancer ingress
                                points that are DNS based (typically AWS load-balancers)
                              type: string
                            ip:
                              description: IP is set for load-balancer ingress points
                                that are IP based (typically GCE or OpenStack load-balancers)
                              type: string
                          type: object
                        type: array
                    type: object
                  region:
                    description: Region to which the cluster belongs
                    type: string
                  zones:
                    description: Zones to which the cluster belongs
                    items:
                      type: string
                    type: array
                type: object
              type: array
            domain:
              description: Domain is the DNS domain of the KubeFed control plane as
                in Domain API
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  name: replicaschedulingpreferences.scheduling.kubefed.io
spec:
  group: scheduling.kubefed.io
  names:
    kind: ReplicaSchedulingPreference
    listKind: ReplicaSchedulingPreferenceList
    plural: replicaschedulingpreferences
    singular: replicaschedulingpreference
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ReplicaSchedulingPreferenceSpec defines the desired state of
            ReplicaSchedulingPreference
          properties:
            clusters:
              additionalProperties:
                description: Preferences regarding number of replicas assigned to
                  a cluster workload object (dep, rs, ..) within a federated workload
                  object.
                properties:
                  maxReplicas:
                    description: Maximum number of replicas that should be assigned
                      to this cluster workload object. Unbounded if no value provided
                      (default).
                    format: int64
                    type: integer
                  minReplicas:
                    description: Minimum number of replicas that should be assigned
                      to this cluster workload object. 0 by default.
                    format: int64
                    type: integer
                  weight:
                    description: A number expressing the preference to put an additional
                      replica to this cluster workload object. 0 by default.
                    format: int64
                    type: integer
                type: object
              description: A mapping between cluster names and preferences regarding
                a local workload object (dep, rs, .. ) in these clusters. "*" (if
                provided) applies to all clusters if an explicit mapping is not provided.
                If omitted, clusters without explicit preferences should not have
                any replicas scheduled.
              type: object
            rebalance:
              description: If set to true then already scheduled and running replicas
                may be moved to other clusters in order to match current state to
                the specified preferences. Otherwise, if set to false, up and running
                replicas will not be moved.
              type: boolean
            targetKind:
              description: TODO (@irfanurrehman); upgrade this to label selector only
                if need be. The idea of this API is to have a a set of preferences
                which can be used for a target FederatedDeployment or FederatedReplicaset.
                Although the set of preferences in question can be applied to multiple
                target objects using label selectors, but there are no clear advantages
                of doing that as of now. To keep the implementation and usage simple,
                matching ns/name of RSP resource to the target resource is sufficient
                and only additional information needed in RSP resource is a target
                kind (FederatedDeployment or FederatedReplicaset).
              type: string
            totalReplicas:
              description: Total number of pods desired across federated clusters.
                Replicas specified in the spec for target deployment template or replicaset
                template will be discarded/overridden when scheduling preferences
                are specified.
              format: int32
              type: integer
          required:
          - targetKind
          - totalReplicas
          type: object
        status:
          description: ReplicaSchedulingPreferenceStatus defines the observed state
            of ReplicaSchedulingPreference
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: kubefed/charts/controllermanager/templates/webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  namespace: default
  name: kubefed-admission-webhook-serving-cert
type: kubernetes.io/tls
stringData:
  tls.crt: "-----BEGIN CERTIFICATE-----\nMIIDcDCCAligAwIBAgIQGNtJLU9eJptNXESyVNhBVDANBgkqhkiG9w0BAQsFADAn\nMSUwIwYDVQQDExxrdWJlZmVkLWFkbWlzc2lvbi13ZWJob29rLWNhMB4XDTIwMDIy\nMTIzMzcyNloXDTMwMDIxODIzMzcyNlowKTEnMCUGA1UEAxMeUkVMRUFTRS1OQU1F\nLWFkbWlzc2lvbi13ZWJob29rMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\nAQEA/AfwyzvHSlOwaBMMzwUp4A4EZ8AIZIDlfb6DQp9CFoXw8GGjItJdCM+Tw/j8\nNWXPA0nAZfsCVBK3ZBulZwZFFbZfo2aljvT2qiRn34lk2dzZIymuPQFVDSOKsOY2\ngEE+WUWakV+G5dP7ovYf8Gic2zat+6c99x4sFJS8AagkCmI4X2CRYifir+K1JQ5t\nX/pkpYIPLBBizDWs8PZVN2/5gGrVEMRKFS3+oorae5ezgfxnV/YmaUoYbYPbSq2U\nClW4/ZJNl5VlZVL+HPo6DOCv7UfQKg5S48Jl0uL4KoasGvqRqq/QMsO1GEMIIVH7\nfFlWHznGc8d7ONkPfDJYVwReWQIDAQABo4GVMIGSMA4GA1UdDwEB/wQEAwIFoDAd\nBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADBTBgNV\nHREETDBKgiFrdWJlZmVkLWFkbWlzc2lvbi13ZWJob29rLmRlZmF1bHSCJWt1YmVm\nZWQtYWRtaXNzaW9uLXdlYmhvb2suZGVmYXVsdC5zdmMwDQYJKoZIhvcNAQELBQAD\nggEBABEmY4AmdhiCWP2RGF+fewRpQ9+uBIliQKZ/Lv386KjE4h2/YSaAThTOmGYG\nONJWMWGj2dZSFbnXez+9+MUuWXhIIGUYUbv4kYYfWISR/evsM0Pjl/a9oQ30VOFn\nr6QCPjDWIFKvlvGc2aeu5ExyKqam0MIFi9rGFSoHOHkRi89r5GpH7SxRLisp/eZ2\nkkI3EfD/4MXk15pLmmL/o7ZFcOxrAvt+FDRz9NrYM1/7xZowkw0Jz0Ac6hSJA0mE\n5xd4ZvC9Y2FJCy9z4rt5BFbsxmV/y0DSmeJ6R90v/3rCK1Icx4D3pFEkbJBiofdf\nLjrxNHUvfZHutxV+NWUCwDXBeDw=\n-----END CERTIFICATE-----\n"
  tls.key: "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA/AfwyzvHSlOwaBMMzwUp4A4EZ8AIZIDlfb6DQp9CFoXw8GGj\nItJdCM+Tw/j8NWXPA0nAZfsCVBK3ZBulZwZFFbZfo2aljvT2qiRn34lk2dzZIymu\nPQFVDSOKsOY2gEE+WUWakV+G5dP7ovYf8Gic2zat+6c99x4sFJS8AagkCmI4X2CR\nYifir+K1JQ5tX/pkpYIPLBBizDWs8PZVN2/5gGrVEMRKFS3+oorae5ezgfxnV/Ym\naUoYbYPbSq2UClW4/ZJNl5VlZVL+HPo6DOCv7UfQKg5S48Jl0uL4KoasGvqRqq/Q\nMsO1GEMIIVH7fFlWHznGc8d7ONkPfDJYVwReWQIDAQABAoIBAQDGhtq+vI/3lITY\n9miYilC6FVCTCUmTIZWkv3VV/W1poIhyUfbXby2pyxlyvaatyUyQIoBT1K243CVp\nzf00clPpDoe3hxvSyFOlIphQFUJD+xtv/10o4OvGNcECJ9W2oa4jVBi1erIgSCNn\n8sil70Hfy+qw2MSO7E18yMxv4arCIZxnzbBUM/qUxLJE3oHSNU+24jqszD1aGO3y\nrplcIMcxn8XtBoSvL8raovBmwEUVHFycD+WaQldqPJ9Ngk5dC05Qc1zIl1pdNDLA\nJEOqC6WT4Zs8qCKRKIhN5infmd7zZTSPqN4ABfKZCtjhFgcDKYTlZ+uW8wznu8rB\n6VaiuuIhAoGBAPxwuOc3xhO6M8HMTXWWq/241T+Uvh8DD//MNo2wuLpyy9znzsau\n5fE66VolxMc8DJTAMw2S3XYvvIy+CtSAtIsN+81xzcJoL9DPjPI8wDTuiZ1l90+q\nyVXKYS8CJK5Xb7bXL9ZOkj4oBMuUIa9evzussb21J012orEbz/ihr3oHAoGBAP+V\nvaRdODL3v/lyxkAu6METs77k7JN+dE4SousO7+F0z8R749na5LRzBwuS3/7aOLry\nT0mpmIqxhRZnVim9yhBm1P8yGN6DWmZeQKGZEPiEmTqXAaIuAhm4iXGI2GDMIWiC\nL6csBMgSVWUn1V6tDSZ5IfRb7gjj2a8KPLkRZsyfAoGAHvcYx0wBIRRbGu+bpMvp\npwLQLa9qLtWqVb9QBctirYQ9W4iXxalYjWGjlCpD3AiSpoB5ArY8Mi4i28TIAU8U\nVmZNt+K40ZsEGoILEP/At/12pfcHAh+5+KsNhr2lkDkre+sjdA9JQxSXmf0+sItX\nu9MwLkwVWRwvUrhNp3r10msCgYBHADQkmvjnv8eG5omIfv+N04lVeIb4GmL45Vh4\n8DdXbHnjXX9Yn+R09Jd6cZzkUX79AB9imUiVDuen56EaC208zTRSiHo8JkVQttJB\nkiISx9NBYX3Erf9LYeZcseVaTprhS3kteZ8CbYVnin9Nw8kpbPEvzvH7akCozbE8\nwEbMhQKBgQCkv5w7ZrI/kRx6YPT0Z6rpmTA0mhotm9W3zdmdug8uYmKowdC++o/d\nn2qlM4CNsMJDvNrotJw9yYKEw/wnDkQZrCDUIQSGcQ96jXJqMAG2xZ2P7/Ijl7UN\n7KF9DbnFsnQ8A+3W/rw2eKcCs9eNpPHLjIEIL/QPSvxXLiZ/CNs+HQ==\n-----END RSA PRIVATE KEY-----\n"
---
# Source: kubefed/charts/controllermanager/templates/serviceaccounts.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubefed-controller
  namespace: default
---
# Source: kubefed/charts/controllermanager/templates/serviceaccounts.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: kubefed-admission-webhook
---
# Source: kubefed/charts/controllermanager/templates/clusterrole.yaml
# This role provides the necessary permissions to create admission reviews.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
# TODO(font) For namespace scoped deployments, create a unique cluster-scoped
# resource name using the namespace. This is needed because helm does not
# currently support the ability to share resources across multiple
# installations of the same chart. Additionally, admission-webhooks do not
# currently support the ability to have namespace-scoped RBAC permissions only.
  name: system:kubefed:default:admission-requester

rules:
- apiGroups:
  - validation.core.kubefed.io
  resources:
  - federatedtypeconfigs
  - kubefedclusters
  - kubefedconfigs
  verbs:
  - create
- apiGroups:
  - mutation.core.kubefed.io
  resources:
  - kubefedconfigs
  verbs:
  - create
---
# Source: kubefed/charts/controllermanager/templates/clusterrolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
# For namespace scoped deployments, create a unique cluster-scoped resource
# name using the namespace. This is needed because admission-webhooks do not
# currently support the ability to have namespace-scoped RBAC permissions only.
  name: kubefed-admission-webhook:default:auth-delegator

roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: kubefed-admission-webhook
  namespace: default
---
# Source: kubefed/charts/controllermanager/templates/clusterrolebindings.yaml
# This clusterrolebinding grants permissions for the admission webhook to create
# admission reviews on behalf of the system:anonymous user.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
# TODO(font) For namespace scoped deployments, create a unique cluster-scoped
# resource name using the namespace. This is needed because helm does not
# currently support the ability to share resources across multiple
# installations of the same chart. Additionally, admission-webhooks do not
# currently support the ability to have namespace-scoped RBAC permissions only.
  name: kubefed-admission-webhook:default:anonymous-auth

roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:kubefed:default:admission-requester

subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:anonymous
---
# Source: kubefed/charts/controllermanager/templates/roles.yaml
# Only need access to these core namespaced resources in the KubeFed system
# namespace regardless of kubefed deployment scope.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    api: kubefed
    kubebuilder.k8s.io: 1.0.0
  name: kubefed-admission-webhook-role
  namespace: default
rules:
- apiGroups:
  - core.kubefed.io
  resources:
  - federatedtypeconfigs
  - kubefedclusters
  - kubefedconfigs
  verbs:
  - get
  - watch
  - list
---
# Source: kubefed/charts/controllermanager/templates/roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    api: kubefed
    kubebuilder.k8s.io: 1.0.0
  name: kubefed-config-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - create
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
---
# Source: kubefed/charts/controllermanager/templates/roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    api: kubefed
    kubebuilder.k8s.io: 1.0.0
  name: kubefed-role
  namespace: default
rules:
- apiGroups:
  - scheduling.kubefed.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
  - update
- apiGroups:
  - multiclusterdns.kubefed.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
  - create
  - update
- apiGroups:
  - core.kubefed.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - delete
- apiGroups:
  - types.kubefed.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - create
  - update
  - patch
---
# Source: kubefed/charts/controllermanager/templates/rolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubefed-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubefed-role
subjects:
- kind: ServiceAccount
  name: kubefed-controller
  namespace: default
---
# Source: kubefed/charts/controllermanager/templates/rolebindings.yaml
# Allow the admission webhook to read the config for terminating
# authentication.
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
# TODO(font) For namespace scoped deployments, create a unique resource name in
# the kube-system namespace using the namespace. This is needed because
# admission-webhooks do not currently support the ability to have
# namespace-scoped RBAC permissions only.
  name: kubefed-admission-webhook:default:apiextension-viewer

  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: kubefed-admission-webhook
  namespace: default
---
# Source: kubefed/charts/controllermanager/templates/rolebindings.yaml
# Grant admission webhook access to core.kubefed.io in the KubeFed system
# namespace only, regardless of kubefed deployment scope.
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubefed-admission-webhook-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubefed-admission-webhook-role
subjects:
- kind: ServiceAccount
  name: kubefed-admission-webhook
  namespace: default
---
# Source: kubefed/charts/controllermanager/templates/rolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubefed-config-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubefed-config-role
subjects:
- kind: ServiceAccount
  name: kubefed-controller
  namespace: default
---
# Source: kubefed/charts/controllermanager/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kubefed-admission-webhook
  namespace: default
spec:
  selector:
    kubefed-admission-webhook: "true"
  ports:
  - port: 443
    targetPort: 8443
---
# Source: kubefed/charts/controllermanager/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: kubefed-admission-webhook
  labels:
    kubefed-admission-webhook: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      kubefed-admission-webhook: "true"
  template:
    metadata:
      labels:
        kubefed-admission-webhook: "true"
    spec:
      securityContext:
        runAsUser: 1001
      serviceAccountName: kubefed-admission-webhook
      containers:
      - name: admission-webhook
        image: "quay.io/kubernetes-multicluster/kubefed:canary"
        imagePullPolicy: "IfNotPresent"
        command:
        - "/hyperfed/webhook"
        - "--secure-port=8443"
        - "--audit-log-path=-"
        - "--tls-cert-file=/var/serving-cert/tls.crt"
        - "--tls-private-key-file=/var/serving-cert/tls.key"
        - "--v=8"
        ports:
        - containerPort: 8443
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: kubefed-admission-webhook-serving-cert
---
# Source: kubefed/charts/controllermanager/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubefed-controller-manager
  namespace: default
  labels:
    kubefed-control-plane: controller-manager
spec:
  replicas: 2
  selector:
    matchLabels:
      kubefed-control-plane: controller-manager
  strategy: {}
  template:
    metadata:
      labels:
        kubefed-control-plane: controller-manager
    spec:
      securityContext:
        runAsUser: 1001
      serviceAccountName: kubefed-controller
      containers:
      - command:
        - /hyperfed/controller-manager
        image: "quay.io/kubernetes-multicluster/kubefed:canary"
        imagePullPolicy: "IfNotPresent"
        name: controller-manager
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 3
          timeoutSeconds: 3
        resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
      terminationGracePeriodSeconds: 10
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: serviceaccounts
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedServiceAccount
    pluralName: federatedserviceaccounts
    scope: Namespaced
    version: v1beta1
  propagation: Enabled
  targetType:
    kind: ServiceAccount
    pluralName: serviceaccounts
    scope: Namespaced
    version: v1
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: replicasets.apps
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedReplicaSet
    pluralName: federatedreplicasets
    scope: Namespaced
    version: v1beta1
  propagation: Enabled
  targetType:
    group: apps
    kind: ReplicaSet
    pluralName: replicasets
    scope: Namespaced
    version: v1
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: namespaces
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedNamespace
    pluralName: federatednamespaces
    scope: Namespaced
    version: v1beta1
  propagation: Enabled
  targetType:
    kind: Namespace
    pluralName: namespaces
    scope: Cluster
    version: v1
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: deployments.apps
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedDeployment
    pluralName: federateddeployments
    scope: Namespaced
    version: v1beta1
  propagation: Enabled
  targetType:
    group: apps
    kind: Deployment
    pluralName: deployments
    scope: Namespaced
    version: v1
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: clusterroles.rbac.authorization.k8s.io
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedClusterRole
    pluralName: federatedclusterroles
    scope: Cluster
    version: v1beta1
  propagation: Enabled
  targetType:
    group: rbac.authorization.k8s.io
    kind: ClusterRole
    pluralName: clusterroles
    scope: Cluster
    version: v1
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: secrets
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedSecret
    pluralName: federatedsecrets
    scope: Namespaced
    version: v1beta1
  propagation: Enabled
  targetType:
    kind: Secret
    pluralName: secrets
    scope: Namespaced
    version: v1
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: jobs.batch
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedJob
    pluralName: federatedjobs
    scope: Namespaced
    version: v1beta1
  propagation: Enabled
  targetType:
    group: batch
    kind: Job
    pluralName: jobs
    scope: Namespaced
    version: v1
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: ingresses.extensions
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedIngress
    pluralName: federatedingresses
    scope: Namespaced
    version: v1beta1
  propagation: Enabled
  targetType:
    group: extensions
    kind: Ingress
    pluralName: ingresses
    scope: Namespaced
    version: v1beta1
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: configmaps
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedConfigMap
    pluralName: federatedconfigmaps
    scope: Namespaced
    version: v1beta1
  propagation: Enabled
  targetType:
    kind: ConfigMap
    pluralName: configmaps
    scope: Namespaced
    version: v1
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: services
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedService
    pluralName: federatedservices
    scope: Namespaced
    version: v1beta1
  propagation: Enabled
  targetType:
    kind: Service
    pluralName: services
    scope: Namespaced
    version: v1
---
# Source: kubefed/charts/controllermanager/templates/kubefedconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: KubeFedConfig
metadata:
  name: kubefed
  namespace: default
spec:
  scope: "Namespaced"
  controllerDuration:
    availableDelay: "20s"
    unavailableDelay: "60s"
  leaderElect:
    leaseDuration: "15s"
    renewDeadline: "10s"
    retryPeriod: "5s"
    resourceLock: "configmaps"
  clusterHealthCheck:
    period: "10s"
    failureThreshold: 3
    successThreshold: 1
    timeout: "3s"
  syncController:
    adoptResources: "Enabled"
  featureGates:
  - name: PushReconciler
    configuration: "Enabled"
  - name: SchedulerPreferences
    configuration: "Enabled"
  - name: CrossClusterServiceDiscovery
    configuration: "Enabled"
  - name: FederatedIngress
    configuration: "Enabled"
---
# Source: kubefed/charts/controllermanager/templates/webhook.yaml
# The same comments for ValidatingWebhookConfiguration apply here to
# MutatingWebhookConfiguration.
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: mutation.core.kubefed.io-default

webhooks:
- name: kubefedconfigs.core.kubefed.io
  clientConfig:
    service:
      namespace: "default"
      name: kubefed-admission-webhook
      path: /apis/mutation.core.kubefed.io/v1beta1/kubefedconfigs
    caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHakNDQWdLZ0F3SUJBZ0lRWWpGc1MzRGZjdDhIVW9Lbmh1UEY3VEFOQmdrcWhraUc5dzBCQVFzRkFEQW4KTVNVd0l3WURWUVFERXh4cmRXSmxabVZrTFdGa2JXbHpjMmx2YmkxM1pXSm9iMjlyTFdOaE1CNFhEVEl3TURJeQpNVEl6TXpjeU5sb1hEVE13TURJeE9ESXpNemN5Tmxvd0p6RWxNQ01HQTFVRUF4TWNhM1ZpWldabFpDMWhaRzFwCmMzTnBiMjR0ZDJWaWFHOXZheTFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQU1nZWhSUk9pNThEVmZ6aURnU29TUW5URVlrOVpGampmWG9YRXNhakFOK2l4VjRBMW92bG42dGN1WkM0QnQ1cwpoZHlHMXJ4b2dHRUoyNC9hSUhCc3lTSm1FM3dXdjZPZ29kY0pTR2hTWFZnclFVTXBTd0hGKzFHMnVHVU13dUhDCm5kRDhpdjNWKzhTMnNsL253aDlHUFNldWdRZS9IL3hyb3hzV2NaaEdPNjBwRCtzb090VWJBellFNXVaM2psOWcKbU1oNDZTVlRyaEg3d3BtRFB2NDlISmVaWXdDSWUrVmJRQXViNkNQdVQ5eStxZkt5SVNtdzUxQjFMN0dyUUhRMwpranVhblJTa0Z6Zm1kd2djVDZVWGNnV3NSM0Zucyt4Tno0MUVtTCtPa1R4S2dXNEpEOGdMS244d1FxYzM4VUhmCjZQOTlxMENEaDVPSEZzZjRxMFJjZEU4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWQKSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxRwpTSWIzRFFFQkN3VUFBNElCQVFBZ0FZSWE3MnQ4ZmlQTXVWNUE4aUhDcnVhVjBzZ0RUY1NJVlhBVkc0eldwamFSCmFET2pUaUpyeE5Uek51dTdVcHhzUjVZR0ZRbmJ2S0ZGcGs1WU1QSGFMVFEwdVdPY1V3V2N4T0ZXVHAxREFpb2sKQmx1Umt4TGd3MFB3SnZPcFFlc0h1bStqY0pFRHhEeno5c0NpSU1seEtMRVZ2NGpoUENaTTlCQ0dHdE1rL3hyQwpISXdqTyt1UkZvb1pXVk9xeDZSbFprV3JMaUtEUUtEbHNHa2tJSkpvL3hNZDRhWnUxeHRwbzZVc29rbkR6RGVvClZtTWNxS041Tk9qaCtUQTQxZHUvMjU5c3ZKVmIyMm9mQmtob25OSWNCR3E4emtocEUwRGlMSDBwcWRKZnk3WDAKZmhpN1l0a2dXZTBRWEVFdFhld21pb09FTWQwcTdWZWVjdFh3Z2cxNQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
  rules:
  - operations:
    - CREATE
    apiGroups:
    - core.kubefed.io
    apiVersions:
    - v1beta1
    resources:
    - kubefedconfigs
  failurePolicy: Fail
  namespaceSelector:
    matchLabels:
      name: default
---
# Source: kubefed/charts/controllermanager/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
# For namespace scoped deployments, create a unique cluster-scoped resource
# using the namespace.
  name: validations.core.kubefed.io-default

webhooks:
- name: federatedtypeconfigs.core.kubefed.io
  clientConfig:
    service:
      namespace: "default"
      name: kubefed-admission-webhook
      path: /apis/validation.core.kubefed.io/v1beta1/federatedtypeconfigs
    caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHakNDQWdLZ0F3SUJBZ0lRWWpGc1MzRGZjdDhIVW9Lbmh1UEY3VEFOQmdrcWhraUc5dzBCQVFzRkFEQW4KTVNVd0l3WURWUVFERXh4cmRXSmxabVZrTFdGa2JXbHpjMmx2YmkxM1pXSm9iMjlyTFdOaE1CNFhEVEl3TURJeQpNVEl6TXpjeU5sb1hEVE13TURJeE9ESXpNemN5Tmxvd0p6RWxNQ01HQTFVRUF4TWNhM1ZpWldabFpDMWhaRzFwCmMzTnBiMjR0ZDJWaWFHOXZheTFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQU1nZWhSUk9pNThEVmZ6aURnU29TUW5URVlrOVpGampmWG9YRXNhakFOK2l4VjRBMW92bG42dGN1WkM0QnQ1cwpoZHlHMXJ4b2dHRUoyNC9hSUhCc3lTSm1FM3dXdjZPZ29kY0pTR2hTWFZnclFVTXBTd0hGKzFHMnVHVU13dUhDCm5kRDhpdjNWKzhTMnNsL253aDlHUFNldWdRZS9IL3hyb3hzV2NaaEdPNjBwRCtzb090VWJBellFNXVaM2psOWcKbU1oNDZTVlRyaEg3d3BtRFB2NDlISmVaWXdDSWUrVmJRQXViNkNQdVQ5eStxZkt5SVNtdzUxQjFMN0dyUUhRMwpranVhblJTa0Z6Zm1kd2djVDZVWGNnV3NSM0Zucyt4Tno0MUVtTCtPa1R4S2dXNEpEOGdMS244d1FxYzM4VUhmCjZQOTlxMENEaDVPSEZzZjRxMFJjZEU4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWQKSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxRwpTSWIzRFFFQkN3VUFBNElCQVFBZ0FZSWE3MnQ4ZmlQTXVWNUE4aUhDcnVhVjBzZ0RUY1NJVlhBVkc0eldwamFSCmFET2pUaUpyeE5Uek51dTdVcHhzUjVZR0ZRbmJ2S0ZGcGs1WU1QSGFMVFEwdVdPY1V3V2N4T0ZXVHAxREFpb2sKQmx1Umt4TGd3MFB3SnZPcFFlc0h1bStqY0pFRHhEeno5c0NpSU1seEtMRVZ2NGpoUENaTTlCQ0dHdE1rL3hyQwpISXdqTyt1UkZvb1pXVk9xeDZSbFprV3JMaUtEUUtEbHNHa2tJSkpvL3hNZDRhWnUxeHRwbzZVc29rbkR6RGVvClZtTWNxS041Tk9qaCtUQTQxZHUvMjU5c3ZKVmIyMm9mQmtob25OSWNCR3E4emtocEUwRGlMSDBwcWRKZnk3WDAKZmhpN1l0a2dXZTBRWEVFdFhld21pb09FTWQwcTdWZWVjdFh3Z2cxNQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - core.kubefed.io
    apiVersions:
    - v1beta1
    resources:
    - federatedtypeconfigs
    - federatedtypeconfigs/status
  failurePolicy: Fail
# For namespace scoped deployments: filter admission webhook requests for
# resources whose namespace matches the default namespace label applied by helm
# upon creating the namespace. User must set this label manually if namespace
# is created prior to installing chart with helm.
# TODO(font): Use custom namespace label once helm adds support for it. See
# https://github.com/helm/helm/issues/4178 for more details.
  namespaceSelector:
    matchLabels:
      name: default

- name: kubefedclusters.core.kubefed.io
  clientConfig:
    service:
      namespace: "default"
      name: kubefed-admission-webhook
      path: /apis/validation.core.kubefed.io/v1beta1/kubefedclusters
    caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHakNDQWdLZ0F3SUJBZ0lRWWpGc1MzRGZjdDhIVW9Lbmh1UEY3VEFOQmdrcWhraUc5dzBCQVFzRkFEQW4KTVNVd0l3WURWUVFERXh4cmRXSmxabVZrTFdGa2JXbHpjMmx2YmkxM1pXSm9iMjlyTFdOaE1CNFhEVEl3TURJeQpNVEl6TXpjeU5sb1hEVE13TURJeE9ESXpNemN5Tmxvd0p6RWxNQ01HQTFVRUF4TWNhM1ZpWldabFpDMWhaRzFwCmMzTnBiMjR0ZDJWaWFHOXZheTFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQU1nZWhSUk9pNThEVmZ6aURnU29TUW5URVlrOVpGampmWG9YRXNhakFOK2l4VjRBMW92bG42dGN1WkM0QnQ1cwpoZHlHMXJ4b2dHRUoyNC9hSUhCc3lTSm1FM3dXdjZPZ29kY0pTR2hTWFZnclFVTXBTd0hGKzFHMnVHVU13dUhDCm5kRDhpdjNWKzhTMnNsL253aDlHUFNldWdRZS9IL3hyb3hzV2NaaEdPNjBwRCtzb090VWJBellFNXVaM2psOWcKbU1oNDZTVlRyaEg3d3BtRFB2NDlISmVaWXdDSWUrVmJRQXViNkNQdVQ5eStxZkt5SVNtdzUxQjFMN0dyUUhRMwpranVhblJTa0Z6Zm1kd2djVDZVWGNnV3NSM0Zucyt4Tno0MUVtTCtPa1R4S2dXNEpEOGdMS244d1FxYzM4VUhmCjZQOTlxMENEaDVPSEZzZjRxMFJjZEU4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWQKSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxRwpTSWIzRFFFQkN3VUFBNElCQVFBZ0FZSWE3MnQ4ZmlQTXVWNUE4aUhDcnVhVjBzZ0RUY1NJVlhBVkc0eldwamFSCmFET2pUaUpyeE5Uek51dTdVcHhzUjVZR0ZRbmJ2S0ZGcGs1WU1QSGFMVFEwdVdPY1V3V2N4T0ZXVHAxREFpb2sKQmx1Umt4TGd3MFB3SnZPcFFlc0h1bStqY0pFRHhEeno5c0NpSU1seEtMRVZ2NGpoUENaTTlCQ0dHdE1rL3hyQwpISXdqTyt1UkZvb1pXVk9xeDZSbFprV3JMaUtEUUtEbHNHa2tJSkpvL3hNZDRhWnUxeHRwbzZVc29rbkR6RGVvClZtTWNxS041Tk9qaCtUQTQxZHUvMjU5c3ZKVmIyMm9mQmtob25OSWNCR3E4emtocEUwRGlMSDBwcWRKZnk3WDAKZmhpN1l0a2dXZTBRWEVFdFhld21pb09FTWQwcTdWZWVjdFh3Z2cxNQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - core.kubefed.io
    apiVersions:
    - v1beta1
    resources:
    - kubefedclusters
    - kubefedclusters/status
  failurePolicy: Fail
# See comment above.
  namespaceSelector:
    matchLabels:
      name: default

- name: kubefedconfigs.core.kubefed.io
  clientConfig:
    service:
      namespace: "default"
      name: kubefed-admission-webhook
      path: /apis/validation.core.kubefed.io/v1beta1/kubefedconfigs
    caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHakNDQWdLZ0F3SUJBZ0lRWWpGc1MzRGZjdDhIVW9Lbmh1UEY3VEFOQmdrcWhraUc5dzBCQVFzRkFEQW4KTVNVd0l3WURWUVFERXh4cmRXSmxabVZrTFdGa2JXbHpjMmx2YmkxM1pXSm9iMjlyTFdOaE1CNFhEVEl3TURJeQpNVEl6TXpjeU5sb1hEVE13TURJeE9ESXpNemN5Tmxvd0p6RWxNQ01HQTFVRUF4TWNhM1ZpWldabFpDMWhaRzFwCmMzTnBiMjR0ZDJWaWFHOXZheTFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQU1nZWhSUk9pNThEVmZ6aURnU29TUW5URVlrOVpGampmWG9YRXNhakFOK2l4VjRBMW92bG42dGN1WkM0QnQ1cwpoZHlHMXJ4b2dHRUoyNC9hSUhCc3lTSm1FM3dXdjZPZ29kY0pTR2hTWFZnclFVTXBTd0hGKzFHMnVHVU13dUhDCm5kRDhpdjNWKzhTMnNsL253aDlHUFNldWdRZS9IL3hyb3hzV2NaaEdPNjBwRCtzb090VWJBellFNXVaM2psOWcKbU1oNDZTVlRyaEg3d3BtRFB2NDlISmVaWXdDSWUrVmJRQXViNkNQdVQ5eStxZkt5SVNtdzUxQjFMN0dyUUhRMwpranVhblJTa0Z6Zm1kd2djVDZVWGNnV3NSM0Zucyt4Tno0MUVtTCtPa1R4S2dXNEpEOGdMS244d1FxYzM4VUhmCjZQOTlxMENEaDVPSEZzZjRxMFJjZEU4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWQKSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxRwpTSWIzRFFFQkN3VUFBNElCQVFBZ0FZSWE3MnQ4ZmlQTXVWNUE4aUhDcnVhVjBzZ0RUY1NJVlhBVkc0eldwamFSCmFET2pUaUpyeE5Uek51dTdVcHhzUjVZR0ZRbmJ2S0ZGcGs1WU1QSGFMVFEwdVdPY1V3V2N4T0ZXVHAxREFpb2sKQmx1Umt4TGd3MFB3SnZPcFFlc0h1bStqY0pFRHhEeno5c0NpSU1seEtMRVZ2NGpoUENaTTlCQ0dHdE1rL3hyQwpISXdqTyt1UkZvb1pXVk9xeDZSbFprV3JMaUtEUUtEbHNHa2tJSkpvL3hNZDRhWnUxeHRwbzZVc29rbkR6RGVvClZtTWNxS041Tk9qaCtUQTQxZHUvMjU5c3ZKVmIyMm9mQmtob25OSWNCR3E4emtocEUwRGlMSDBwcWRKZnk3WDAKZmhpN1l0a2dXZTBRWEVFdFhld21pb09FTWQwcTdWZWVjdFh3Z2cxNQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - core.kubefed.io
    apiVersions:
    - v1beta1
    resources:
    - kubefedconfigs
  failurePolicy: Fail
# See comment above.
  namespaceSelector:
    matchLabels:
      name: default
apiVersion: v1
---
# service to connect fed-manager to KF
kind: Service
metadata:
  labels:
    kubefed-control-plane: controller-manager
  name: kubefed-healthz-svc
  namespace: deaas
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    kubefed-control-plane: controller-manager
  sessionAffinity: None
  type: ClusterIP
---
# fed-manager deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fed-manager-dep
spec:
  selector:
    matchLabels:
      app: fed-manager
  replicas: 1
  template:
    metadata:
      labels:
        app: fed-manager
    spec:
      containers:
        - name: fed-manager-con
          image: quay.io/krao/bauhaus-fedmanager:v0.1

